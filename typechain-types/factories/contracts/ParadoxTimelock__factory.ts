/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ParadoxTimelock,
  ParadoxTimelockInterface,
} from "../../contracts/ParadoxTimelock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_paradox",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_cliff",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_total",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_denominator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CliffNotDone",
    type: "error",
  },
  {
    inputs: [],
    name: "NotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToClaim",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    inputs: [],
    name: "denominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paradox",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pending",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "period",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "total",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b50604051620011923803806200119283398181016040528101906200003891906200026d565b620000586200004c620000fc60201b60201c565b6200010460201b60201c565b86600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062278d0086620000aa91906200034f565b83620000b791906200039a565b608081815250508460a081815250508360c081815250508160e081815250506201518081620000e791906200034f565b610100818152505050505050505050620003d5565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fa82620001cd565b9050919050565b6200020c81620001ed565b81146200021857600080fd5b50565b6000815190506200022c8162000201565b92915050565b6000819050919050565b620002478162000232565b81146200025357600080fd5b50565b60008151905062000267816200023c565b92915050565b600080600080600080600060e0888a0312156200028f576200028e620001c8565b5b60006200029f8a828b016200021b565b9750506020620002b28a828b0162000256565b9650506040620002c58a828b0162000256565b9550506060620002d88a828b0162000256565b9450506080620002eb8a828b0162000256565b93505060a0620002fe8a828b0162000256565b92505060c0620003118a828b0162000256565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200035c8262000232565b9150620003698362000232565b9250828202620003798162000232565b9150828204841483151762000393576200039262000320565b5b5092915050565b6000620003a78262000232565b9150620003b48362000232565b9250828201905080821115620003cf57620003ce62000320565b5b92915050565b60805160a05160c05160e05161010051610d246200046e60003960008181610271015281816105b501526106c10152600081816102d60152818161055a015261061a0152600081816102f7015281816104a9015261063b01526000818161031901528181610485015261065d01526000818161021301528181610292015281816105070152818161058001526105d60152610d246000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610157578063961325211461017557806396ce079514610193578063e20ccec3146101b1578063ef78d4fd146101cf578063f2fde38b146101ed576100b4565b806319165587146100b95780632c4e722e146100d55780632ddbd13a146100f35780635027978d14610111578063715018a61461012f578063766e33f414610139575b600080fd5b6100d360048036038101906100ce9190610913565b610209565b005b6100dd610483565b6040516100ea9190610959565b60405180910390f35b6100fb6104a7565b6040516101089190610959565b60405180910390f35b6101196104cb565b60405161012691906109d3565b60405180910390f35b6101376104f1565b005b610141610505565b60405161014e9190610959565b60405180910390f35b61015f610529565b60405161016c91906109fd565b60405180910390f35b61017d610552565b60405161018a9190610959565b60405180910390f35b61019b610558565b6040516101a89190610959565b60405180910390f35b6101b961057c565b6040516101c69190610959565b60405180910390f35b6101d76106bf565b6040516101e49190610959565b60405180910390f35b61020760048036038101906102029190610913565b6106e3565b005b610211610766565b7f000000000000000000000000000000000000000000000000000000000000000042101561026b576040517f1afcf85b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060017f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000426102bc9190610a47565b6102c69190610aaa565b6102d09190610adb565b905060007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000837f00000000000000000000000000000000000000000000000000000000000000006103429190610b0f565b61034c9190610b0f565b6103569190610aaa565b90506002548103905060008103610399576040517f969bf72800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060025401600281905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401610401929190610b51565b6020604051808303816000875af1158015610420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104449190610bb2565b507fb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e8382604051610476929190610b51565b60405180910390a1505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104f9610766565b61050360006107e4565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000004210156105af57600090506106bc565b600060017f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000426106009190610a47565b61060a9190610aaa565b6106149190610adb565b905060007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000837f00000000000000000000000000000000000000000000000000000000000000006106869190610b0f565b6106909190610b0f565b61069a9190610aaa565b905060025481039050600081036106b6576000925050506106bc565b80925050505b90565b7f000000000000000000000000000000000000000000000000000000000000000081565b6106eb610766565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361075a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075190610c62565b60405180910390fd5b610763816107e4565b50565b61076e6108a8565b73ffffffffffffffffffffffffffffffffffffffff1661078c610529565b73ffffffffffffffffffffffffffffffffffffffff16146107e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d990610cce565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108e0826108b5565b9050919050565b6108f0816108d5565b81146108fb57600080fd5b50565b60008135905061090d816108e7565b92915050565b600060208284031215610929576109286108b0565b5b6000610937848285016108fe565b91505092915050565b6000819050919050565b61095381610940565b82525050565b600060208201905061096e600083018461094a565b92915050565b6000819050919050565b600061099961099461098f846108b5565b610974565b6108b5565b9050919050565b60006109ab8261097e565b9050919050565b60006109bd826109a0565b9050919050565b6109cd816109b2565b82525050565b60006020820190506109e860008301846109c4565b92915050565b6109f7816108d5565b82525050565b6000602082019050610a1260008301846109ee565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a5282610940565b9150610a5d83610940565b9250828203905081811115610a7557610a74610a18565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ab582610940565b9150610ac083610940565b925082610ad057610acf610a7b565b5b828204905092915050565b6000610ae682610940565b9150610af183610940565b9250828201905080821115610b0957610b08610a18565b5b92915050565b6000610b1a82610940565b9150610b2583610940565b9250828202610b3381610940565b91508282048414831517610b4a57610b49610a18565b5b5092915050565b6000604082019050610b6660008301856109ee565b610b73602083018461094a565b9392505050565b60008115159050919050565b610b8f81610b7a565b8114610b9a57600080fd5b50565b600081519050610bac81610b86565b92915050565b600060208284031215610bc857610bc76108b0565b5b6000610bd684828501610b9d565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c4c602683610bdf565b9150610c5782610bf0565b604082019050919050565b60006020820190508181036000830152610c7b81610c3f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610cb8602083610bdf565b9150610cc382610c82565b602082019050919050565b60006020820190508181036000830152610ce781610cab565b905091905056fea26469706673582212208173deb956e0cbf5b40b9e0ecb3e7dd9fa33c8fe45f57f64c698303ee6bd925964736f6c63430008110033";

type ParadoxTimelockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ParadoxTimelockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ParadoxTimelock__factory extends ContractFactory {
  constructor(...args: ParadoxTimelockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _paradox: PromiseOrValue<string>,
    _cliff: PromiseOrValue<BigNumberish>,
    _rate: PromiseOrValue<BigNumberish>,
    _total: PromiseOrValue<BigNumberish>,
    _startTime: PromiseOrValue<BigNumberish>,
    _denominator: PromiseOrValue<BigNumberish>,
    _period: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ParadoxTimelock> {
    return super.deploy(
      _paradox,
      _cliff,
      _rate,
      _total,
      _startTime,
      _denominator,
      _period,
      overrides || {}
    ) as Promise<ParadoxTimelock>;
  }
  override getDeployTransaction(
    _paradox: PromiseOrValue<string>,
    _cliff: PromiseOrValue<BigNumberish>,
    _rate: PromiseOrValue<BigNumberish>,
    _total: PromiseOrValue<BigNumberish>,
    _startTime: PromiseOrValue<BigNumberish>,
    _denominator: PromiseOrValue<BigNumberish>,
    _period: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _paradox,
      _cliff,
      _rate,
      _total,
      _startTime,
      _denominator,
      _period,
      overrides || {}
    );
  }
  override attach(address: string): ParadoxTimelock {
    return super.attach(address) as ParadoxTimelock;
  }
  override connect(signer: Signer): ParadoxTimelock__factory {
    return super.connect(signer) as ParadoxTimelock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ParadoxTimelockInterface {
    return new utils.Interface(_abi) as ParadoxTimelockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ParadoxTimelock {
    return new Contract(address, _abi, signerOrProvider) as ParadoxTimelock;
  }
}
